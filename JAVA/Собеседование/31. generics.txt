üöÄ –ß—Ç–æ —Ç–∞–∫–æ–µ generics –≤ Java?
 
Generics (–æ–±–æ–±—â–µ–Ω–∏—è) ‚Äî —ç—Ç–æ –º–µ—Ö–∞–Ω–∏–∑–º –≤ Java, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–∏—Å–∞—Ç—å –∫–ª–∞—Å—Å—ã, –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∏ –º–µ—Ç–æ–¥—ã —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Ç–∏–ø–∞ (—Ç–∏–ø–∞-–ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞–º–∏).
–≠—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–æ–¥ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –ø–æ —Ç–∏–ø–∞–º, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ—à–∏–±–∫–∏ —Ç–∏–ø–æ–≤ –ª–æ–≤—è—Ç—Å—è —É–∂–µ –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏.
üì¶ –ü—Ä–∏–º–µ—Ä –±–µ–∑ generics
 
–ï—Å–ª–∏ –∏—Ö –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –æ–ø–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å Object –∏ –ø–æ—Ç–æ–º –¥–µ–ª–∞—Ç—å –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ (casting):
 
List list = new ArrayList();
list.add("Hello");
String s = (String) list.get(0); // –Ω—É–∂–µ–Ω cast
 
–û—à–∏–±–∫–∞ –≤ —Ä–∞–Ω—Ç–∞–π–º–µ:
 
list.add(123); // –¥–æ–±–∞–≤–∏–ª–∏ —á–∏—Å–ª–æ
String s = (String) list.get(1); // ClassCastException
 
‚úÖ –ü—Ä–∏–º–µ—Ä —Å generics
 
–° generic-–∞–º–∏ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä —Å—Ä–∞–∑—É –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç —Ç–∏–ø—ã.
 
List<String> list = new ArrayList<>();
list.add("Hello");
// list.add(123); // –æ—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏!
String s = list.get(0); // –Ω–∏–∫–∞–∫–æ–≥–æ cast
 
üèó –ö–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π generic-–∫–ª–∞—Å—Å
 
–ù–∞–ø—Ä–∏–º–µ—Ä, –æ–±–æ–±—â—ë–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä:
 
public class Box<T> {
    private T value;
 
    public void set(T value) {
        this.value = value;
    }
    public T get() {
        return value;
    }
}
 
–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–∞–∫:
 
Box<String> stringBox = new Box<>();
stringBox.set("Hello");
String s = stringBox.get();
 
Box<Integer> intBox = new Box<>();
intBox.set(123);
Integer i = intBox.get();
 
‚öôÔ∏è Generic-–º–µ—Ç–æ–¥—ã
 
public class Util {
    public static <T> void printArray(T[] array) {
        for (T elem : array) {
            System.out.println(elem);
        }
    }
}
 
–ò—Å–ø–æ–ª—å–∑—É–µ–º:
 
String[] words = {"Java", "Python"};
Integer[] numbers = {1, 2, 3};
 
Util.printArray(words);
Util.printArray(numbers);
 
üî• –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è generics
 
    –ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏–º–∏—Ç–∏–≤—ã –Ω–∞–ø—Ä—è–º—É—é:
 
// List<int> –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç
List<Integer> list = new ArrayList<>();
 
–ù–µ–ª—å–∑—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã generic-—Ç–∏–ø–∞:
 
// new T() –Ω–µ–ª—å–∑—è
 
–ù–µ–ª—å–∑—è –¥–µ–ª–∞—Ç—å static –ø–æ–ª—è —Å generic:
 
    class Test<T> {
        // static T value; // –æ—à–∏–±–∫–∞
    }
 
üìù –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ç–∏–ø–∞ (bounded types)
 
–ú–æ–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ T –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–æ–º –∫–∞–∫–æ–≥–æ-—Ç–æ –∫–ª–∞—Å—Å–∞ –∏–ª–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
 
public class Calculator<T extends Number> {
    private T num;
 
    public Calculator(T num) {
        this.num = num;
    }
 
    public double doubleValue() {
        return num.doubleValue() * 2;
    }
}
 
‚úÖ –ò—Ç–æ–≥–æ:
 
    Generics –¥–∞—é—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–∏–ø–æ–≤, –ø–æ–∑–≤–æ–ª—è—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –≥–∏–±–∫–∏–µ –∏ —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –∏ –º–µ—Ç–æ–¥—ã.
 
    –û–Ω–∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—é—Ç –æ—à–∏–±–∫–∏ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è —Ç–∏–ø–æ–≤ —É–∂–µ –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏.
 