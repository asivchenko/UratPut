
–ß—Ç–æ —Ç–∞–∫–æ–µ —Ä–µ—Ñ–ª–µ–∫—Å–∏—è (Reflection)?
 
–†–µ—Ñ–ª–µ–∫—Å–∏—è –≤ Java ‚Äî —ç—Ç–æ –º–µ—Ö–∞–Ω–∏–∑–º, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–µ:
 
    –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É (–∫–ª–∞—Å—Å—ã, –ø–æ–ª—è, –º–µ—Ç–æ–¥—ã, –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã, –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏) –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è,
 
    –∞ —Ç–∞–∫–∂–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã, –≤—ã–∑—ã–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã, –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –ø–æ–ª—è–º, –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ —ç—Ç–∏ –¥–µ—Ç–∞–ª–∏ –±—ã–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã.
 
–ò–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏:
 
    –†–µ—Ñ–ª–µ–∫—Å–∏—è –¥–∞—ë—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∫–ª–∞—Å—Å–∞–º–∏ –∏ –∏—Ö —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —á–µ—Ä–µ–∑ API java.lang.reflect, –∞ –Ω–µ —á–µ—Ä–µ–∑ –æ–±—ã—á–Ω—ã–π –∂—ë—Å—Ç–∫–∏–π –∫–æ–¥.
 
üöÄ –î–ª—è —á–µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ—Ñ–ª–µ–∫—Å–∏—è
 
‚úÖ –î–ª—è —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤ (Spring, Hibernate, Jackson JSON –∏ –¥—Ä.), —á—Ç–æ–±—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:
 
    —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã –ø–æ –∏–º–µ–Ω–∏ –∫–ª–∞—Å—Å–∞,
 
    –≤—ã–∑—ã–≤–∞—Ç—å –≥–µ—Ç—Ç–µ—Ä—ã/—Å–µ—Ç—Ç–µ—Ä—ã,
 
    –∑–∞–ø–æ–ª–Ω—è—Ç—å –ø–æ–ª—è –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–ª–∏ JSON.
 
‚úÖ –î–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏).
 
‚úÖ –î–ª—è —Ç–µ—Å—Ç–æ–≤, –≥–¥–µ –Ω—É–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –ø–æ–ª—è.
‚öôÔ∏è –ü—Ä–∏–º–µ—Ä: —Ä–µ—Ñ–ª–µ–∫—Å–∏—è –≤ –∫–æ–¥–µ
üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∞—Å—Å–µ
 
Class<?> clazz = String.class;
System.out.println(clazz.getName()); // java.lang.String
 
–ú–æ–∂–Ω–æ —Ç–∞–∫ –∂–µ:
 
Class<?> clazz = Class.forName("java.util.ArrayList");
 
üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–µ–π –∏ –º–µ—Ç–æ–¥–æ–≤
 
for (Field field : clazz.getDeclaredFields()) {
    System.out.println("–ü–æ–ª–µ: " + field.getName()); }
 
for (Method method : clazz.getDeclaredMethods()) {
    System.out.println("–ú–µ—Ç–æ–¥: " + method.getName()); }
 
üìå –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
 
Class<?> clazz = Class.forName("java.lang.StringBuilder");
Object obj = clazz.getDeclaredConstructor().newInstance();
 
System.out.println(obj.getClass().getName()); // java.lang.StringBuilder
 
üìå –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ —á–µ—Ä–µ–∑ —Ä–µ—Ñ–ª–µ–∫—Å–∏—é
 
Method method = clazz.getMethod("append", String.class); method.invoke(obj, "Hello Reflection!");
 
System.out.println(obj.toString()); // Hello Reflection!
 
üìå –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ø—Ä–∏–≤–∞—Ç–Ω—ã–º –ø–æ–ª—è–º
 
Field field = someClass.getDeclaredField("hiddenValue");
field.setAccessible(true); // –æ—Ç–∫–ª—é—á–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –¥–æ—Å—Ç—É–ø–∞ field.set(someObject, 123);
 
‚ö† –ú–∏–Ω—É—Å—ã —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏
–ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫    –ü–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ
üêå –ú–µ–¥–ª–µ–Ω–Ω–µ–µ –æ–±—ã—á–Ω–æ–≥–æ –∫–æ–¥–∞    JVM –Ω–µ –º–æ–∂–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–∞–∫ —Ö–æ—Ä–æ—à–æ
üí• –ù–µ—Ç –≥–∞—Ä–∞–Ω—Ç–∏–π —Ç–∏–ø–æ–≤    –û—à–∏–±–∫–∏ –≤–æ–∑–Ω–∏–∫–∞—é—Ç –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
üîí –ù–∞—Ä—É—à–∞–µ—Ç –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—é    –ú–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–≤–∞—Ç–Ω—ã–º –¥–∞–Ω–Ω—ã–º
‚úç –ò—Ç–æ–≥ –∫–æ—Ä–æ—Ç–∫–æ
 
    –†–µ—Ñ–ª–µ–∫—Å–∏—è –≤ Java ‚Äî —ç—Ç–æ API –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–∞–º–∏, –º–µ—Ç–æ–¥–∞–º–∏ –∏ –ø–æ–ª—è–º–∏ –≤ runtime (–≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã).

