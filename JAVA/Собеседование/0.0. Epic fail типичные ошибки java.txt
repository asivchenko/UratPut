public class EpicFails {
    public static void main(String[] args) {
 
        // 1. Сравнение строк через ==
        String a = "hello";
        String b = new String("hello");
        if (a == b) {
            System.out.println("FAIL: Strings equal by ==");
        } else {
            System.out.println("OK: Strings not equal by ==");
        }
        if (a.equals(b)) {
            System.out.println("OK: Strings equal by equals()");
        }
 
        // 2. NullPointerException
        try {
            String text = null;
            if (text.length() > 0) {
                System.out.println("Not empty");
            }
        } catch (NullPointerException e) {
            System.out.println("FAIL: NullPointerException caught");
        }
 
        // 3. == для объектов
        Integer x = 1000;
        Integer y = 1000;
        if (x == y) {
            System.out.println("FAIL: Integers equal by ==");
        } else {
            System.out.println("OK: Integers not equal by ==");
        }
        if (x.equals(y)) {
            System.out.println("OK: Integers equal by equals()");
        }
 
        // 4. Модификация коллекции при итерации
        java.util.List<String> list = new java.util.ArrayList<>(java.util.List.of("a", "b", "c"));
        try {
            for (String s : list) {
                if (s.equals("b")) {
                    list.remove(s);
                }
            }
        } catch (java.util.ConcurrentModificationException e) {
            System.out.println("FAIL: ConcurrentModificationException caught");
        }
 
       
 
        // 6. ArrayIndexOutOfBounds
        int[] arr = {1,2,3};
        try {
            System.out.println(arr[3]);
        } catch (ArrayIndexOutOfBoundsException e) {
            System.out.println("FAIL: ArrayIndexOutOfBoundsException caught");
        }
 
        // 7. HashMap без equals и hashCode
        java.util.Map<Person, String> map = new java.util.HashMap<>();
        map.put(new Person("Alice"), "Developer");
        String role = map.get(new Person("Alice"));
        if (role == null) {
            System.out.println("FAIL: Person not found in HashMap");
        }
    }
 
    static class Person {
        String name;
        Person(String name) { this.name = name; }
    }
} 
 